# SAIA Perfect Fit Widget

Widget, that implements getting garment size for user based on SAIA Perfect Fit API.

## How to run

**1. Install all dependencies with the following command:**

```sh
npm install
```

**2. To run the project in development mode, type in a terminal the following command:**

```sh
npm start
```

**3. To build the widget for production use this command:**

```sh
npm run build:prod
```

Build for Shopify (for internal usage only):

```sh
npm run build:shopify
```

## Build configuration file

Configuration file should be named like this:

    saia-config.<config type>.js

File should export an object, which contains the following:

```js
module.exports = {
  // saia api host url
  API_HOST: '{{apiUrl}}',
  // client api key
  API_KEY: '{{key}}',
  // shopify host url
  SHOPIFY_HOST: '{{domain}}',
  // widget host url
  WIDGET_HOST: '{{widget}}',
};
```


## Deployment requirements

To properly host widget for your website, you need to host index.html file of subdomain, for example, https://widget.example.com, and then call it from your website. This is required for widget navigation to work.


## Example of usage

Let's configure widget for your store, that is located on this domain https://test-store.com/. Before building the widget, we already prepared a subdomain for it, let's call it https://pf-widget.test-store.com/. Now you should clone this repository on your computer. After that enter the widget directory and run the following command:

```sh
npm install
```

Then create a configuration file for your shop with name like this:

```
saia-config.test-store.js
```

Enter required information to this file:

```js
// saia-config.test-store.js
module.exports = {
  // saia api host url
  API_HOST: 'https://saia.3dlook.me',
  // client api key
  API_KEY: 'h2f98h13fh934hv91b3h51345b245yqeg255y',
  // shopify host url
  SHOPIFY_HOST: '', // ignore this field
  // widget host url
  WIDGET_HOST: 'https://pf-widget.test-store.com',
};
```

After that, run in the terminal the following command:

```sh
export NODE_ENV=production && export CONFIG=sport-clothing-store && webpack --progress
```

You will get dist folder, that has this structure:

```
dist/
--widget-assets/
....*image assets*
--index.html
--saia-pf-button.js
..ignore other files
```

On domain https://pf-widget.test-store.com/ you should host widget-assets folder and index.html file - widget files. saia-pf-button.js should be included on the pages, on which you want to display a button and widget modal. This file could be included with this code:

```html
<script src="saia-pf-button.js"></script>
```

After this tag you can initialize the button. Example code:

```js
(async () => {
  const button = new SaiaButton({
    // widget container element selector
    container: '.product-single__meta',
    // your SAIA API key
    key: 'fnqiwhf9v9y9ty13bt783yugyiurygb3v78gvt',
    // widget domain
    widgetUrl: 'https://pf-widget.test-store.com/',
    // brand name
    brand: 'Nike',
    // body part
    bodyPart: 'top',
    // product information
    product: {
      // product image url for results page
      imageUrl: 'https://imagehost.com/images/products/product.jpg',
      // product description for results page
      description: 'The Nike Air Rally Women\'s Crew',
    },
  });

  // init button
  button.init();

  // try to get size recomendation for user,
  // that already has passed the widget flow
  // and has its measurements in localStorage
  const recomendations = await button.getSize();

  // display size recomendations
  if (recomendations) {
    button.displaySize(recomendations);
  }
})();

```

After that you will get "Your perfect fit" button on the page.

{{>main}}

# TODO:

* Split SCSS styles to components style files
